[
  {
    "name": "Array Get",
    "icon": "<i class=\"icon i-ellipsis-h\"></i>",
    "type": 5,
    "version": 1,
    "inner_text": "[&nbsp;]",
    "java": "in{0}[in{1}]",
    "input": [
      { "type": "Any", "label": "Array", "dimensions":1 },
      { "type": "Integer", "label": "Index", "value":0 }
    ],
    "output": [
      { "type": "Any", "label": "Element" }
    ]
  },
  {
    "name": "Array Length",
    "type": 5,
    "version": 1,
    "java": "in{0}.length",
    "input": [
      { "type": "Any", "label": "Array", "dimensions":1 }
    ],
    "output": [
      { "type": "Integer", "label": "Length" }
    ]
  },
  {
    "name": "Array To String",
    "icon": "<i class=\"icon i-ellipsis-h\"></i>",
    "type": 4,
    "version": 1,
    "java": "out{1} = \"\"; for (int _{node.id}_i=0; _{node.id}_i<in{1}.length; _{node.id}_i++) { if (_{node.id}_i > 0) out{1} += in{2}; out{1} += in{1}[_{node.id}_i]; }",
    "input": [
      { "type": "Exec", "label": "" },
      { "type": "Any", "label": "Array", "dimensions":1 },
      { "type": "String", "label": "Delimiter", "value":";", "single_line":true }
    ],
    "output": [
      { "type": "Exec", "label": "" },
      { "type": "String", "label": "Element", "java": {"references": {"variable":"arrayStr"}} }
    ]
  },
  {
    "name": "Array Reverse",
    "type": 4,
    "version": 1,
    "import": ["java.util.*"],
    "java": "Collections.reverse(Arrays.asList(in{1})); ",
    "input": [
      { "type": "Exec", "label": "" },
      { "type": "Any", "label": "Array", "dimensions":1 }
    ],
    "output": [
      { "type": "Exec", "label": "" },
      { "type": "Any", "label": "Reversed", "dimensions":1, "java": {"references": {"input":1}} }
    ]
  }
]
