{"types":[{"init":"new JSONObject()","color":"lightslategray","import":"org.json.simple.JSONObject","name":"JSONObject"},{"init":"new JSONArray()","color":"lightslategray","import":"org.json.simple.JSONArray","name":"JSONArray"}],"nodes":[{"output":[{"label":"Success","type":"Exec"},{"java":{"references":{"variable":"obj"}},"label":"Json","type":"Object"}],"input":[{"label":"","type":"Exec"},{"label":"Array","type":"JSONArray","dimensions":0},{"label":"i","type":"Integer","dimensions":0}],"package":{"groupId":"org.jlogic.plugin","artifactId":"json","version":"1.0.0"},"java":"Object[] _{node.id}_out = org.jlogic.plugin.json.JSON.get(in{1}, in{2});\nout{1} = (Object)_{node.id}_out[1];\n\n","import":["org.json.simple.*","org.json.simple.parser.*"],"name":"JSON Array Get","type":4},{"output":[{"label":"Success","type":"Exec"},{"java":{"references":{"variable":"obj"}},"label":"Object","type":"Object"},{"java":{"references":{"variable":"isArray"}},"label":"Is array","type":"Boolean"},{"label":"Error","type":"Exec"}],"input":[{"label":"","type":"Exec"},{"label":"String","type":"String","dimensions":0}],"package":{"groupId":"org.jlogic.plugin","artifactId":"json","version":"1.0.0"},"java":"Object[] _{node.id}_out = org.jlogic.plugin.json.JSON.parse(in{1});\nout{1} = (Object)_{node.id}_out[1];\nout{3} = (Object)_{node.id}_out[3];\nout{4} = (Boolean)_{node.id}_out[4];\n\nif ((Boolean) _{node.id}_out[0]) { exec{0} } else if ((Boolean) _{node.id}_out[2]) { exec{2} } else if ((Boolean) _{node.id}_out[5]) { exec{5} }","import":["org.json.simple.*","org.json.simple.parser.*"],"name":"JSON Parse","type":4},{"output":[{"label":"Success","type":"Exec"},{"java":{"references":{"variable":"jo"}},"label":"Json","type":"JSONObject"}],"input":[{"label":"","type":"Exec"}],"package":{"groupId":"org.jlogic.plugin","artifactId":"json","version":"1.0.0"},"java":"Object[] _{node.id}_out = org.jlogic.plugin.json.JSON.createObject();\nout{1} = (Object)_{node.id}_out[1];\nout{3} = (Object)_{node.id}_out[3];\nout{4} = (Boolean)_{node.id}_out[4];\nout{7} = (JSONObject)_{node.id}_out[7];\n\nif ((Boolean) _{node.id}_out[0]) { exec{0} } else if ((Boolean) _{node.id}_out[2]) { exec{2} } else if ((Boolean) _{node.id}_out[5]) { exec{5} } else if ((Boolean) _{node.id}_out[6]) { exec{6} }","import":["org.json.simple.*","org.json.simple.parser.*"],"name":"JSON Object New","type":4},{"output":[],"input":[{"label":"Object","type":"Object","dimensions":0}],"package":{"groupId":"org.jlogic.plugin","artifactId":"json","version":"1.0.0"},"java":"org.jlogic.plugin.json.JSON.toJSONObject(in{0})","import":["org.json.simple.*","org.json.simple.parser.*"],"name":"Object To JSONObject","type":5},{"output":[{"label":"Success","type":"Exec"},{"java":{"references":{"variable":"ja"}},"label":"Json","type":"JSONArray"}],"input":[{"label":"","type":"Exec"}],"package":{"groupId":"org.jlogic.plugin","artifactId":"json","version":"1.0.0"},"java":"Object[] _{node.id}_out = org.jlogic.plugin.json.JSON.createArray();\nout{1} = (Object)_{node.id}_out[1];\nout{3} = (Object)_{node.id}_out[3];\nout{4} = (Boolean)_{node.id}_out[4];\nout{7} = (JSONObject)_{node.id}_out[7];\nout{9} = (JSONArray)_{node.id}_out[9];\n\nif ((Boolean) _{node.id}_out[0]) { exec{0} } else if ((Boolean) _{node.id}_out[2]) { exec{2} } else if ((Boolean) _{node.id}_out[5]) { exec{5} } else if ((Boolean) _{node.id}_out[6]) { exec{6} } else if ((Boolean) _{node.id}_out[8]) { exec{8} }","import":["org.json.simple.*","org.json.simple.parser.*"],"name":"JSON Array New","type":4},{"output":[],"input":[{"label":"Object","type":"Object","dimensions":0}],"package":{"groupId":"org.jlogic.plugin","artifactId":"json","version":"1.0.0"},"java":"org.jlogic.plugin.json.JSON.toJSONArray(in{0})","import":["org.json.simple.*","org.json.simple.parser.*"],"name":"Object To JSONArray","type":5}]}